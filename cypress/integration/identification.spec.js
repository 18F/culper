/// <reference types="Cypress" />

const fillInDate = (selector, year, month, day) => {
  return cy
    .get(selector).find('.month input').type(month).blur()
    .get(selector).find('.day input').type(day).blur()
    .get(selector).find('.year input').type(year).blur()
}

context('Information About You Section', () => {
  beforeEach(() => {
    cy.exec('bin/resetdb')
    cy.fixture('users').then((users) => {
      cy.login(users[0].username, users[0].password)
    })
      .isLocation('/form/identification/intro')
      .get('.title').contains('Section 1: Information about you')
      .get('button.next').click()
  })

  describe('Fill out section successfully', () => {
    it('fills in basic applicant data', () => {
      cy.isLocation('/form/identification/name')
        .get('.title').contains('Provide your full name')
        .fixture('applicantData').then((applicant) => {
          cy.get('.name').within(($name) => {
            cy.get('.first input')
              .type(applicant.first).blur().isSuccessful(applicant.first)
              .get('.middle input')
              .type(applicant.middle).blur().isSuccessful(applicant.middle)
              .get('.last input')
              .type(applicant.last).blur().isSuccessful(applicant.last)
          })
        })
        .get('button.next').click()
        .isLocation('/form/identification/othernames')
        .get('.title').contains('Provide your other names used and the period of time you used them')
        .get('.other-names .branch .yes').click().isChecked()
        .get('.other-name .title').contains('Provide other name used')
        .fixture('applicantData').then((applicant) => {
          cy.get('.name').within(($name) => {
            cy.get('.first input')
              .type(applicant.otherNames.first).blur().isSuccessful(applicant.otherNames.first)
              .get('.middle input')
              .type(applicant.otherNames.middle).blur().isSuccessful(applicant.otherNames.middle)
              .get('.last input')
              .type(applicant.otherNames.last).blur().isSuccessful(applicant.otherNames.last)
          })
          cy.get('.datecontrol.from').typeDate('2010', '1', '1')
            .get('.datecontrol.from').isDateSuccessful('2010', '1', '1')
            .get('.datecontrol.to').typeDate('2011', '1', '1')
            .get('.datecontrol.to').isDateSuccessful('2011', '1', '1')
            .get('textarea[name="Reason"]').type(applicant.otherNames.reason).blur().isSuccessful(applicant.otherNames.reason)
        })
        .get('.maiden-name .no.block').click().isChecked()
        .get('.other-names .branch.addendum .no').click().isChecked()
        .get('button.next').click()
        .isLocation('/form/identification/contacts')
        .get('.title').contains('Provide your contact information')
        .fixture('applicantData').then((applicant) => {
          cy.get('input[name="HomeEmail"]').type(applicant.homeEmail).blur().isSuccessful(applicant.homeEmail)
            .get('input[name="WorkEmail"]').type(applicant.workEmail).blur().isSuccessful(applicant.workEmail)
            .get('input[name="domestic_first"]').type(applicant.phoneNumbers[0].first).blur().isSuccessful(applicant.phoneNumbers[0].first)
            .get('input[name="domestic_second"]').type(applicant.phoneNumbers[0].second).blur().isSuccessful(applicant.phoneNumbers[0].second)
            .get('input[name="domestic_third"]').type(applicant.phoneNumbers[0].third).blur().isSuccessful(applicant.phoneNumbers[0].third)
            .get(`.timeofday .${applicant.phoneNumbers[0].timeofday} label`).click()
            .get(`.timeofday .${applicant.phoneNumbers[0].timeofday} input[type="radio"]`).should('have.class', 'usa-input-success').should('have.class', 'selected')
            .get(`.phonetype .${applicant.phoneNumbers[0].phonetype} label`).click().isChecked()
            .get('.telephone-collection .title-case').contains(`(${applicant.phoneNumbers[0].first}) ${applicant.phoneNumbers[0].second}-${applicant.phoneNumbers[0].third}`)
        })
        .get('button.next').click()
        .isLocation('/form/identification/birthdate')
        .get('.title').contains('Provide your date of birth')
        .fixture('applicantData').then((applicant) => {
          cy.get('.datecontrol').typeDate(applicant.birthDate.year, applicant.birthDate.month, applicant.birthDate.day)
            .get('.datecontrol').isDateSuccessful(applicant.birthDate.year, applicant.birthDate.month, applicant.birthDate.day)
        })
        .get('button.next').click()
        .isLocation('/form/identification/birthplace')
        .get('.title').contains('Provide your place of birth')
        .fixture('applicantData').then((applicant) => {
          cy.get('.applicant-birthplace .branch .yes.block').click().isChecked()
            .get('input[name="city"]').type(applicant.birthPlace.city).blur().isSuccessful(applicant.birthPlace.city)
            .get('input[name="state"]').type(applicant.birthPlace.state.input).blur().isSuccessful(applicant.birthPlace.state.expected)
            .get('input[name="county"]').type(applicant.birthPlace.county).blur().isSuccessful(applicant.birthPlace.county)
        })
        .get('button.next').click()
        .isLocation('/form/identification/ssn')
        .get('.title').contains('Provide your U.S. Social Security Number')
        .fixture('applicantData').then((applicant) => {
          cy.get('.applicant-ssn-initial input[name="first"]').type(applicant.ssn.first).blur().isSuccessful(applicant.ssn.first)
            .get('.applicant-ssn-initial input[name="middle"]').type(applicant.ssn.middle).blur().isSuccessful(applicant.ssn.middle)
            .get('.applicant-ssn-initial input[name="last"]').type(applicant.ssn.last).blur().isSuccessful(applicant.ssn.last)
            .get('.applicant-ssn-verification input[name="first"]').type(applicant.ssn.first)
            .get('.applicant-ssn-verification input[name="middle"]').type(applicant.ssn.middle)
            .get('.applicant-ssn-verification input[name="last"]').type(applicant.ssn.last)
            .get('.title').contains('Thank you for confirming your social security number!')
        })
        .get('button.next').click()
        .isLocation('/form/identification/physical')
        .get('.title').contains('Provide your identifying information')
        .fixture('applicantData').then((applicant) => {
          cy.get('input[name="feet"]').type(applicant.physical.feet).blur().isSuccessful(applicant.physical.feet)
            .get('input[name="inches"]').type(applicant.physical.inches).blur().isSuccessful(applicant.physical.inches)
            .get('input[name="pounds"]').type(applicant.physical.pounds).blur().isSuccessful(applicant.physical.pounds)
            .get(`.hair-colors .${applicant.physical.hair}.block.extended`).click().isChecked()
            .get(`.eye-colors .${applicant.physical.eye}.block.extended`).click().isChecked()
            .get(`.sex .${applicant.physical.sex}.block.extended`).click().isChecked()
        })
        .get('button.next').click()
        .isLocation('/form/identification/review')
        .get('.title').contains('Review your answers')
        .isSectionLinkMarkedValid('/form/identification/name')
        .isSectionLinkMarkedValid('/form/identification/othernames')
        .isSectionLinkMarkedValid('/form/identification/contacts')
        .isSectionLinkMarkedValid('/form/identification/birthdate')
        .isSectionLinkMarkedValid('/form/identification/birthplace')
        .isSectionLinkMarkedValid('/form/identification/ssn')
        .isSectionLinkMarkedValid('/form/identification/physical')
        .get('a.section-link[aria-controls="/form/identification"]').should('have.class', 'is-valid')
        .fixture('applicantData').then((applicant) => {
          cy.get('.name').within(($name) => {
            cy.get('.first input').isSuccessful(applicant.first)
              .get('.middle input').isSuccessful(applicant.middle)
              .get('.last input').isSuccessful(applicant.last)
          })
          cy.get('input[name="feet"]').isSuccessful(applicant.physical.feet)
            .get('input[name="inches"]').isSuccessful(applicant.physical.inches)
            .get('input[name="pounds"]').isSuccessful(applicant.physical.pounds)
            .get(`.hair-colors .${applicant.physical.hair}.block.extended`).isChecked()
            .get(`.eye-colors .${applicant.physical.eye}.block.extended`).isChecked()
            .get(`.sex .${applicant.physical.sex}.block.extended`).isChecked()
          cy.get('.other-names').within(($name) => {
            cy.get('.first input').isSuccessful(applicant.otherNames.first)
              .get('.middle input').isSuccessful(applicant.otherNames.middle)
              .get('.last input').isSuccessful(applicant.otherNames.last)
              .get('.datecontrol.from').isDateSuccessful('2010', '1', '1')
              .get('.datecontrol.to').isDateSuccessful('2011', '1', '1')
              .get('textarea[name="Reason"]').isSuccessful(applicant.otherNames.reason)
          })
          cy.get('.maiden-name .no.block').isChecked()
            .get('.other-names .branch.addendum .no').isChecked()
            .get('input[name="HomeEmail"]').isSuccessful(applicant.homeEmail)
            .get('input[name="WorkEmail"]').isSuccessful(applicant.workEmail)
            .get('input[name="domestic_first"]').isSuccessful(applicant.phoneNumbers[0].first)
            .get('input[name="domestic_second"]').isSuccessful(applicant.phoneNumbers[0].second)
            .get('input[name="domestic_third"]').isSuccessful(applicant.phoneNumbers[0].third)
            .get(`.timeofday .${applicant.phoneNumbers[0].timeofday} input[type="radio"]`).should('have.class', 'usa-input-success').should('have.class', 'selected')
            .get(`.phonetype .${applicant.phoneNumbers[0].phonetype} label`).isChecked()
            .get('.birthdate .datecontrol').isDateSuccessful(applicant.birthDate.year, applicant.birthDate.month, applicant.birthDate.day)
            .get('.applicant-birthplace .branch .yes.block').isChecked()
            .get('.applicant-birthplace input[name="city"]').isSuccessful(applicant.birthPlace.city)
            .get('.applicant-birthplace input[name="state"]').isSuccessful(applicant.birthPlace.state.expected)
            .get('.applicant-birthplace input[name="county"]').isSuccessful(applicant.birthPlace.county)
            .get('.applicant-ssn-initial input[name="first"]').isSuccessful(applicant.ssn.first)
            .get('.applicant-ssn-initial input[name="middle"]').isSuccessful(applicant.ssn.middle)
            .get('.applicant-ssn-initial input[name="last"]').isSuccessful(applicant.ssn.last)
            .get('input[name="feet"]').isSuccessful(applicant.physical.feet)
            .get('input[name="inches"]').isSuccessful(applicant.physical.inches)
            .get('input[name="pounds"]').isSuccessful(applicant.physical.pounds)
            .get(`.hair-colors .${applicant.physical.hair}.block.extended`).isChecked()
            .get(`.eye-colors .${applicant.physical.eye}.block.extended`).isChecked()
            .get(`.sex .${applicant.physical.sex}.block.extended`).isChecked()
            .get('.usa-alert-error').should('not.exist')
        })
    })
  })
})
