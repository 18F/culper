"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.messages = exports.ruleName = undefined;

exports.default = function (actual) {
  return function (root, result) {
    var validOptions = (0, _utils.validateOptions)(result, ruleName, { actual: actual });
    if (!validOptions) {
      return;
    }

    var declaredAnimations = new Set();
    root.walkAtRules(/keyframes/i, function (atRule) {
      declaredAnimations.add(atRule.params);
    });

    root.walkDecls(function (decl) {
      if (decl.prop.toLowerCase() === "animation-name" && !_keywordSets.animationNameKeywords.has(decl.value.toLowerCase())) {
        checkAnimationName(decl.value, decl);
      }

      if (decl.prop.toLowerCase() === "animation") {
        var animationNames = (0, _utils.findAnimationName)(decl.value);
        if (animationNames.length === 0) {
          return;
        }

        animationNames.forEach(function (animationNameNode) {
          if (_keywordSets.basicKeywords.has(animationNameNode.value.toLowerCase())) {
            return;
          }

          checkAnimationName(animationNameNode.value, decl, animationNameNode.sourceIndex);
        });
      }
    });

    function checkAnimationName(animationName, decl) {
      var offset = arguments.length <= 2 || arguments[2] === undefined ? 0 : arguments[2];

      if (declaredAnimations.has(animationName)) {
        return;
      }
      (0, _utils.report)({
        result: result,
        ruleName: ruleName,
        message: messages.rejected(animationName),
        node: decl,
        index: (0, _utils.declarationValueIndex)(decl) + offset
      });
    }
  };
};

var _utils = require("../../utils");

var _keywordSets = require("../../reference/keywordSets");

var ruleName = exports.ruleName = "no-unknown-animations";

var messages = exports.messages = (0, _utils.ruleMessages)(ruleName, {
  rejected: function rejected(animationName) {
    return "Unexpected unknown animation name \"" + animationName + "\"";
  }
});