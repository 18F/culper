# intended for local development

version: '2'

services:
  db:
    image: postgres:9.6.5
    volumes:
      - ./conf/postgres-configure.sh:/docker-entrypoint-initdb.d/postgres-configure.sh
      - ./conf/postgres.conf:/srv/postgresql.conf
      - ./api/eapp.crt:/srv/server.crt
      - ./api/eapp.key:/srv/server.key
    expose:
      - '5432'
    networks:
      - eapp

  # Within the docker world this is the main entrypoint in to
  # this web application. This was done in order to have a
  # combination of:
  #  - development REPL
  #  - automated unit tests
  #  - spec testing
  #
  # The web server will do the following:
  #  - serve compiled static assets
  #  - proxy /api requests to the backend API
  web:
    image: nginx:alpine
    command: nginx
    volumes:
      - ./conf/ssl:/etc/ssl
      - ./conf/nginx.conf:/etc/nginx/nginx.conf
      - ./dist:/usr/share/nginx/html
    ports:
      - '8080:8080'
      - '8443:8443'
    networks:
      - eapp
    depends_on:
      - api

  js:
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend
    env_file:
      - .env
    command: yarn watch-js
    volumes:
      - .:/usr/src/app
      # ensure node_modules aren't shared with host system
      # https://michalzalecki.com/docker-compose-for-nodejs-and-postresql/#docker-compose
      - /usr/src/app/node_modules
    networks:
      - eapp

  css:
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend
    env_file:
      - .env
    command: yarn watch-css
    volumes:
      - .:/usr/src/app
      # ditto above
      - /usr/src/app/node_modules
    networks:
      - eapp

  api:
    build:
      context: .
      dockerfile: docker/Dockerfile.api
    env_file:
      - .env
    working_dir: /go/src/github.com/18F/e-QIP-prototype/api
    command: ./bin/run.sh
    volumes:
      - .:/go/src/github.com/18F/e-QIP-prototype
    expose:
      - '3000'
    environment:
      DATABASE_USER: postgres
      DATABASE_NAME: postgres
      DATABASE_HOST: db:5432
    networks:
      - eapp
    depends_on:
      - db

  docs:
    build:
      context: .
      dockerfile: docker/Dockerfile.docs
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    working_dir: /usr/src/app
    command: ./bin/docs.sh
    networks:
      - eapp
    depends_on:
      - db

  deps:
    image: buildpack-deps:stretch-scm
    volumes:
      - .:/usr/src/app
    working_dir: /usr/src/app
    environment:
      DEBIAN_FRONTEND: noninteractive
    networks:
      - eapp

networks:
  eapp:
    driver: bridge
