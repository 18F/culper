// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The ApplicantBirthDate component renders without errors 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="section-content birthdate"
    data-section="identification"
    data-subsection="birthdate"
  >
    <h1
      className="section-header"
    >
      Date of birth
    </h1>
    <Field
      adjustFor=""
      className=""
      comments={false}
      commentsActive={false}
      commentsAdd="comments.add"
      commentsName="Comments"
      commentsRemove="comments.remove"
      commentsRequired={false}
      commentsValue={Object {}}
      errorPrefix=""
      errors={Array []}
      filterErrors={[Function]}
      help="identification.birthdate.help"
      helpActive={false}
      optional={false}
      optionalText=""
      scrollIntoView={true}
      shrink={false}
      title="Provide your date of birth"
      titleSize="h4"
      validate={true}
    >
      <Connect(DateControl)
        name="birthdate"
        onError={[Function]}
        onUpdate={[Function]}
        relationship="Self"
      />
      <Show
        when={false}
      >
        <Checkbox
          checked={false}
          className="age-warning"
          error={false}
          focus={false}
          label="I confirm this date is correct"
          name="Confirmed"
          onError={[Function]}
          onUpdate={[Function]}
          required={false}
          valid={false}
          value="Confirmed"
        />
      </Show>
    </Field>
  </div>,
  "nodes": Array [
    <div
      className="section-content birthdate"
      data-section="identification"
      data-subsection="birthdate"
    >
      <h1
        className="section-header"
      >
        Date of birth
      </h1>
      <Field
        adjustFor=""
        className=""
        comments={false}
        commentsActive={false}
        commentsAdd="comments.add"
        commentsName="Comments"
        commentsRemove="comments.remove"
        commentsRequired={false}
        commentsValue={Object {}}
        errorPrefix=""
        errors={Array []}
        filterErrors={[Function]}
        help="identification.birthdate.help"
        helpActive={false}
        optional={false}
        optionalText=""
        scrollIntoView={true}
        shrink={false}
        title="Provide your date of birth"
        titleSize="h4"
        validate={true}
      >
        <Connect(DateControl)
          name="birthdate"
          onError={[Function]}
          onUpdate={[Function]}
          relationship="Self"
        />
        <Show
          when={false}
        >
          <Checkbox
            checked={false}
            className="age-warning"
            error={false}
            focus={false}
            label="I confirm this date is correct"
            name="Confirmed"
            onError={[Function]}
            onUpdate={[Function]}
            required={false}
            valid={false}
            value="Confirmed"
          />
        </Show>
      </Field>
    </div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <ApplicantBirthDate
        Confirmed={Object {}}
        Date={Object {}}
        dispatch={[Function]}
        onError={[Function]}
        onUpdate={[Function]}
        validator={[Function]}
      />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": ApplicantBirthDate {
        "_reactInternalInstance": [Circular],
        "confirmationError": [Function],
        "context": Object {},
        "handleCompletion": [Function],
        "handleError": [Function],
        "props": Object {
          "Confirmed": Object {},
          "Date": Object {},
          "dispatch": [Function],
          "onError": [Function],
          "onUpdate": [Function],
          "validator": [Function],
        },
        "refs": Object {},
        "section": "identification",
        "state": Object {
          "errors": Array [],
          "needsConfirmation": false,
          "uid": "birthdate-MOCK-GUID",
        },
        "store": "Identification",
        "storeKey": "ApplicantBirthDate",
        "subsection": "birthdate",
        "update": [Function],
        "updateConfirmed": [Function],
        "updateDate": [Function],
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="section-content birthdate"
          data-section="identification"
          data-subsection="birthdate"
        >
          <h1
            className="section-header"
          >
            Date of birth
          </h1>
          <Field
            adjustFor=""
            className=""
            comments={false}
            commentsActive={false}
            commentsAdd="comments.add"
            commentsName="Comments"
            commentsRemove="comments.remove"
            commentsRequired={false}
            commentsValue={Object {}}
            errorPrefix=""
            errors={Array []}
            filterErrors={[Function]}
            help="identification.birthdate.help"
            helpActive={false}
            optional={false}
            optionalText=""
            scrollIntoView={true}
            shrink={false}
            title="Provide your date of birth"
            titleSize="h4"
            validate={true}
          >
            <Connect(DateControl)
              name="birthdate"
              onError={[Function]}
              onUpdate={[Function]}
              relationship="Self"
            />
            <Show
              when={false}
            >
              <Checkbox
                checked={false}
                className="age-warning"
                error={false}
                focus={false}
                label="I confirm this date is correct"
                name="Confirmed"
                onError={[Function]}
                onUpdate={[Function]}
                required={false}
                valid={false}
                value="Confirmed"
              />
            </Show>
          </Field>
        </div>,
        "_debugID": 2,
        "_renderedOutput": <div
          className="section-content birthdate"
          data-section="identification"
          data-subsection="birthdate"
        >
          <h1
            className="section-header"
          >
            Date of birth
          </h1>
          <Field
            adjustFor=""
            className=""
            comments={false}
            commentsActive={false}
            commentsAdd="comments.add"
            commentsName="Comments"
            commentsRemove="comments.remove"
            commentsRequired={false}
            commentsValue={Object {}}
            errorPrefix=""
            errors={Array []}
            filterErrors={[Function]}
            help="identification.birthdate.help"
            helpActive={false}
            optional={false}
            optionalText=""
            scrollIntoView={true}
            shrink={false}
            title="Provide your date of birth"
            titleSize="h4"
            validate={true}
          >
            <Connect(DateControl)
              name="birthdate"
              onError={[Function]}
              onUpdate={[Function]}
              relationship="Self"
            />
            <Show
              when={false}
            >
              <Checkbox
                checked={false}
                className="age-warning"
                error={false}
                focus={false}
                label="I confirm this date is correct"
                name="Confirmed"
                onError={[Function]}
                onUpdate={[Function]}
                required={false}
                valid={false}
                value="Confirmed"
              />
            </Show>
          </Field>
        </div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <ApplicantBirthDate
    Confirmed={Object {}}
    Date={Object {}}
    dispatch={[Function]}
    onError={[Function]}
    onUpdate={[Function]}
    validator={[Function]}
  />,
}
`;
