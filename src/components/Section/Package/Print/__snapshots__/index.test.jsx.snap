// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The PackagePrint component renders without errors 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="pre-print-view"
  >
    <div
      className="screen-only"
    >
      <ReactMarkdown
        containerTagName="div"
        parserOptions={Object {}}
        renderers={
          Object {
            "link": [Function],
          }
        }
        source="## Please print and save your responses

**This will be your only opportunity.** Your form will be locked when you logout. Be sure to print and save your responses before leaving this screen. To save a PDF click the Save/Print button then change the printer \\"Destination\\" to \\"Save as PDF\\"."
      />
      <button
        className="print-btn"
        onClick={[Function]}
        type="button"
      >
        Save/Print
      </button>
      <Show
        when={false}
      >
        <div
          className="done"
        >
          <span
            className="icon"
          >
            <Svg
              alt="Submission complete"
              src="/img/checkmark.svg"
            />
          </span>
          <ReactMarkdown
            containerTagName="div"
            parserOptions={Object {}}
            renderers={
              Object {
                "link": [Function],
              }
            }
            source="## You are done!

### Thanks for submitting for your SF-86

If you need assistance contact the office who initiated your form.

## We would love your feedback!

Striving to provide the most enjoyable experience through the application process any feedback you would be willing to [provide in our survey](https://docs.google.com/forms/d/e/1FAIpQLSeRQj_m3Ot0ILFuLg2LtFKJPTEAqMATw3kc3MiFOkj3fxs3ug/viewform) is appreciated."
          />
        </div>
      </Show>
      <h4
        className="hash"
      >
        Data hash code
      </h4>
      <p
        className="hash"
      />
    </div>
    <div
      className="screen-only"
    >
      <h4
        className="attachments"
      >
        Certification and Releases
      </h4>
      <p
        className="attachments"
      >
        <ReactMarkdown
          containerTagName="div"
          parserOptions={Object {}}
          renderers={
            Object {
              "link": [Function],
            }
          }
          source="The following are archival documents corresponding to your digitally signed certification and releases."
        />
      </p>
      <table>
        <tbody />
      </table>
    </div>
    <div
      className="print-view"
    >
      <h4>
        <ReactMarkdown
          containerTagName="div"
          parserOptions={Object {}}
          renderers={
            Object {
              "link": [Function],
            }
          }
          source="Statement of Understanding"
        />
      </h4>
      <ReactMarkdown
        containerTagName="div"
        parserOptions={Object {}}
        renderers={
          Object {
            "link": [Function],
          }
        }
        source="Persons completing this form should begin after carefully reading the preceding instructions"
      />
      <ReactMarkdown
        containerTagName="div"
        parserOptions={Object {}}
        renderers={
          Object {
            "link": [Function],
          }
        }
        source="I have read the instructions and I understand that if I withhold, misrepresent, or falsify information on this form, I am subject to the penalties for inaccurate or false statement (per U. S. Criminal Code, Title 18, section 1001), denial or revocation of a security clearance, and/or removal and debarment from Federal Service."
      />
      <RadioGroup
        className="option-list branch"
        disabled={false}
        onError={[Function]}
        required={false}
        selectedValue="Yes"
      >
        <Radio
          ariaLabel=""
          checked="true"
          className="yes"
          disabled={false}
          error={false}
          focus={false}
          label="Yes"
          name="radio_input"
          native={false}
          onError={[Function]}
          onUpdate={[Function]}
          valid={false}
          value="Yes"
          valued=""
        />
        <Radio
          ariaLabel=""
          checked={false}
          className="no"
          disabled={false}
          error={false}
          focus={false}
          label="No"
          name="radio_input"
          native={false}
          onError={[Function]}
          onUpdate={[Function]}
          valid={false}
          value="No"
          valued=""
        />
      </RadioGroup>
    </div>
  </div>,
  "nodes": Array [
    <div
      className="pre-print-view"
    >
      <div
        className="screen-only"
      >
        <ReactMarkdown
          containerTagName="div"
          parserOptions={Object {}}
          renderers={
            Object {
              "link": [Function],
            }
          }
          source="## Please print and save your responses

**This will be your only opportunity.** Your form will be locked when you logout. Be sure to print and save your responses before leaving this screen. To save a PDF click the Save/Print button then change the printer \\"Destination\\" to \\"Save as PDF\\"."
        />
        <button
          className="print-btn"
          onClick={[Function]}
          type="button"
        >
          Save/Print
        </button>
        <Show
          when={false}
        >
          <div
            className="done"
          >
            <span
              className="icon"
            >
              <Svg
                alt="Submission complete"
                src="/img/checkmark.svg"
              />
            </span>
            <ReactMarkdown
              containerTagName="div"
              parserOptions={Object {}}
              renderers={
                Object {
                  "link": [Function],
                }
              }
              source="## You are done!

### Thanks for submitting for your SF-86

If you need assistance contact the office who initiated your form.

## We would love your feedback!

Striving to provide the most enjoyable experience through the application process any feedback you would be willing to [provide in our survey](https://docs.google.com/forms/d/e/1FAIpQLSeRQj_m3Ot0ILFuLg2LtFKJPTEAqMATw3kc3MiFOkj3fxs3ug/viewform) is appreciated."
            />
          </div>
        </Show>
        <h4
          className="hash"
        >
          Data hash code
        </h4>
        <p
          className="hash"
        />
      </div>
      <div
        className="screen-only"
      >
        <h4
          className="attachments"
        >
          Certification and Releases
        </h4>
        <p
          className="attachments"
        >
          <ReactMarkdown
            containerTagName="div"
            parserOptions={Object {}}
            renderers={
              Object {
                "link": [Function],
              }
            }
            source="The following are archival documents corresponding to your digitally signed certification and releases."
          />
        </p>
        <table>
          <tbody />
        </table>
      </div>
      <div
        className="print-view"
      >
        <h4>
          <ReactMarkdown
            containerTagName="div"
            parserOptions={Object {}}
            renderers={
              Object {
                "link": [Function],
              }
            }
            source="Statement of Understanding"
          />
        </h4>
        <ReactMarkdown
          containerTagName="div"
          parserOptions={Object {}}
          renderers={
            Object {
              "link": [Function],
            }
          }
          source="Persons completing this form should begin after carefully reading the preceding instructions"
        />
        <ReactMarkdown
          containerTagName="div"
          parserOptions={Object {}}
          renderers={
            Object {
              "link": [Function],
            }
          }
          source="I have read the instructions and I understand that if I withhold, misrepresent, or falsify information on this form, I am subject to the penalties for inaccurate or false statement (per U. S. Criminal Code, Title 18, section 1001), denial or revocation of a security clearance, and/or removal and debarment from Federal Service."
        />
        <RadioGroup
          className="option-list branch"
          disabled={false}
          onError={[Function]}
          required={false}
          selectedValue="Yes"
        >
          <Radio
            ariaLabel=""
            checked="true"
            className="yes"
            disabled={false}
            error={false}
            focus={false}
            label="Yes"
            name="radio_input"
            native={false}
            onError={[Function]}
            onUpdate={[Function]}
            valid={false}
            value="Yes"
            valued=""
          />
          <Radio
            ariaLabel=""
            checked={false}
            className="no"
            disabled={false}
            error={false}
            focus={false}
            label="No"
            name="radio_input"
            native={false}
            onError={[Function]}
            onUpdate={[Function]}
            valid={false}
            value="No"
            valued=""
          />
        </RadioGroup>
      </div>
    </div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <PackagePrint
        Settings={Object {}}
        formSections={Array []}
      />,
      "_debugID": 1499,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": PackagePrint {
        "_reactInternalInstance": [Circular],
        "captureLogoutClick": [Function],
        "captureNavigationClick": [Function],
        "context": Object {},
        "download": [Function],
        "getStoredAttachments": [Function],
        "handlePrint": [Function],
        "props": Object {
          "Settings": Object {},
          "formSections": Array [],
        },
        "refs": Object {},
        "state": Object {
          "attachments": Array [],
          "printed": false,
        },
        "supportsBlobs": true,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="pre-print-view"
        >
          <div
            className="screen-only"
          >
            <ReactMarkdown
              containerTagName="div"
              parserOptions={Object {}}
              renderers={
                Object {
                  "link": [Function],
                }
              }
              source="## Please print and save your responses

**This will be your only opportunity.** Your form will be locked when you logout. Be sure to print and save your responses before leaving this screen. To save a PDF click the Save/Print button then change the printer \\"Destination\\" to \\"Save as PDF\\"."
            />
            <button
              className="print-btn"
              onClick={[Function]}
              type="button"
            >
              Save/Print
            </button>
            <Show
              when={false}
            >
              <div
                className="done"
              >
                <span
                  className="icon"
                >
                  <Svg
                    alt="Submission complete"
                    src="/img/checkmark.svg"
                  />
                </span>
                <ReactMarkdown
                  containerTagName="div"
                  parserOptions={Object {}}
                  renderers={
                    Object {
                      "link": [Function],
                    }
                  }
                  source="## You are done!

### Thanks for submitting for your SF-86

If you need assistance contact the office who initiated your form.

## We would love your feedback!

Striving to provide the most enjoyable experience through the application process any feedback you would be willing to [provide in our survey](https://docs.google.com/forms/d/e/1FAIpQLSeRQj_m3Ot0ILFuLg2LtFKJPTEAqMATw3kc3MiFOkj3fxs3ug/viewform) is appreciated."
                />
              </div>
            </Show>
            <h4
              className="hash"
            >
              Data hash code
            </h4>
            <p
              className="hash"
            />
          </div>
          <div
            className="screen-only"
          >
            <h4
              className="attachments"
            >
              Certification and Releases
            </h4>
            <p
              className="attachments"
            >
              <ReactMarkdown
                containerTagName="div"
                parserOptions={Object {}}
                renderers={
                  Object {
                    "link": [Function],
                  }
                }
                source="The following are archival documents corresponding to your digitally signed certification and releases."
              />
            </p>
            <table>
              <tbody />
            </table>
          </div>
          <div
            className="print-view"
          >
            <h4>
              <ReactMarkdown
                containerTagName="div"
                parserOptions={Object {}}
                renderers={
                  Object {
                    "link": [Function],
                  }
                }
                source="Statement of Understanding"
              />
            </h4>
            <ReactMarkdown
              containerTagName="div"
              parserOptions={Object {}}
              renderers={
                Object {
                  "link": [Function],
                }
              }
              source="Persons completing this form should begin after carefully reading the preceding instructions"
            />
            <ReactMarkdown
              containerTagName="div"
              parserOptions={Object {}}
              renderers={
                Object {
                  "link": [Function],
                }
              }
              source="I have read the instructions and I understand that if I withhold, misrepresent, or falsify information on this form, I am subject to the penalties for inaccurate or false statement (per U. S. Criminal Code, Title 18, section 1001), denial or revocation of a security clearance, and/or removal and debarment from Federal Service."
            />
            <RadioGroup
              className="option-list branch"
              disabled={false}
              onError={[Function]}
              required={false}
              selectedValue="Yes"
            >
              <Radio
                ariaLabel=""
                checked="true"
                className="yes"
                disabled={false}
                error={false}
                focus={false}
                label="Yes"
                name="radio_input"
                native={false}
                onError={[Function]}
                onUpdate={[Function]}
                valid={false}
                value="Yes"
                valued=""
              />
              <Radio
                ariaLabel=""
                checked={false}
                className="no"
                disabled={false}
                error={false}
                focus={false}
                label="No"
                name="radio_input"
                native={false}
                onError={[Function]}
                onUpdate={[Function]}
                valid={false}
                value="No"
                valued=""
              />
            </RadioGroup>
          </div>
        </div>,
        "_debugID": 1500,
        "_renderedOutput": <div
          className="pre-print-view"
        >
          <div
            className="screen-only"
          >
            <ReactMarkdown
              containerTagName="div"
              parserOptions={Object {}}
              renderers={
                Object {
                  "link": [Function],
                }
              }
              source="## Please print and save your responses

**This will be your only opportunity.** Your form will be locked when you logout. Be sure to print and save your responses before leaving this screen. To save a PDF click the Save/Print button then change the printer \\"Destination\\" to \\"Save as PDF\\"."
            />
            <button
              className="print-btn"
              onClick={[Function]}
              type="button"
            >
              Save/Print
            </button>
            <Show
              when={false}
            >
              <div
                className="done"
              >
                <span
                  className="icon"
                >
                  <Svg
                    alt="Submission complete"
                    src="/img/checkmark.svg"
                  />
                </span>
                <ReactMarkdown
                  containerTagName="div"
                  parserOptions={Object {}}
                  renderers={
                    Object {
                      "link": [Function],
                    }
                  }
                  source="## You are done!

### Thanks for submitting for your SF-86

If you need assistance contact the office who initiated your form.

## We would love your feedback!

Striving to provide the most enjoyable experience through the application process any feedback you would be willing to [provide in our survey](https://docs.google.com/forms/d/e/1FAIpQLSeRQj_m3Ot0ILFuLg2LtFKJPTEAqMATw3kc3MiFOkj3fxs3ug/viewform) is appreciated."
                />
              </div>
            </Show>
            <h4
              className="hash"
            >
              Data hash code
            </h4>
            <p
              className="hash"
            />
          </div>
          <div
            className="screen-only"
          >
            <h4
              className="attachments"
            >
              Certification and Releases
            </h4>
            <p
              className="attachments"
            >
              <ReactMarkdown
                containerTagName="div"
                parserOptions={Object {}}
                renderers={
                  Object {
                    "link": [Function],
                  }
                }
                source="The following are archival documents corresponding to your digitally signed certification and releases."
              />
            </p>
            <table>
              <tbody />
            </table>
          </div>
          <div
            className="print-view"
          >
            <h4>
              <ReactMarkdown
                containerTagName="div"
                parserOptions={Object {}}
                renderers={
                  Object {
                    "link": [Function],
                  }
                }
                source="Statement of Understanding"
              />
            </h4>
            <ReactMarkdown
              containerTagName="div"
              parserOptions={Object {}}
              renderers={
                Object {
                  "link": [Function],
                }
              }
              source="Persons completing this form should begin after carefully reading the preceding instructions"
            />
            <ReactMarkdown
              containerTagName="div"
              parserOptions={Object {}}
              renderers={
                Object {
                  "link": [Function],
                }
              }
              source="I have read the instructions and I understand that if I withhold, misrepresent, or falsify information on this form, I am subject to the penalties for inaccurate or false statement (per U. S. Criminal Code, Title 18, section 1001), denial or revocation of a security clearance, and/or removal and debarment from Federal Service."
            />
            <RadioGroup
              className="option-list branch"
              disabled={false}
              onError={[Function]}
              required={false}
              selectedValue="Yes"
            >
              <Radio
                ariaLabel=""
                checked="true"
                className="yes"
                disabled={false}
                error={false}
                focus={false}
                label="Yes"
                name="radio_input"
                native={false}
                onError={[Function]}
                onUpdate={[Function]}
                valid={false}
                value="Yes"
                valued=""
              />
              <Radio
                ariaLabel=""
                checked={false}
                className="no"
                disabled={false}
                error={false}
                focus={false}
                label="No"
                name="radio_input"
                native={false}
                onError={[Function]}
                onUpdate={[Function]}
                valid={false}
                value="No"
                valued=""
              />
            </RadioGroup>
          </div>
        </div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <PackagePrint
    Settings={Object {}}
    formSections={Array []}
  />,
}
`;
