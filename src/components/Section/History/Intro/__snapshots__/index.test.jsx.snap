// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`History Intro renders without errors 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Connect(SectionIntro)
    body={
      <ReactMarkdown
        containerTagName="div"
        parserOptions={Object {}}
        renderers={
          Object {
            "link": [Function],
          }
        }
        source="You will be asked questions about your history and be asked to provide details if necessary. This section includes where you have lived, where you have worked, and where you went to school."
      />
    }
    sectionKey="HISTORY"
    title="Your history"
  />,
  "nodes": Array [
    <Connect(SectionIntro)
      body={
        <ReactMarkdown
          containerTagName="div"
          parserOptions={Object {}}
          renderers={
            Object {
              "link": [Function],
            }
          }
          source="You will be asked questions about your history and be asked to provide details if necessary. This section includes where you have lived, where you have worked, and where you went to school."
        />
      }
      sectionKey="HISTORY"
      title="Your history"
    />,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <Intro />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {},
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <Connect(SectionIntro)
          body={
            <ReactMarkdown
              containerTagName="div"
              parserOptions={Object {}}
              renderers={
                Object {
                  "link": [Function],
                }
              }
              source="You will be asked questions about your history and be asked to provide details if necessary. This section includes where you have lived, where you have worked, and where you went to school."
            />
          }
          sectionKey="HISTORY"
          title="Your history"
        />,
        "_debugID": 2,
        "_renderedOutput": <Connect(SectionIntro)
          body={
            <ReactMarkdown
              containerTagName="div"
              parserOptions={Object {}}
              renderers={
                Object {
                  "link": [Function],
                }
              }
              source="You will be asked questions about your history and be asked to provide details if necessary. This section includes where you have lived, where you have worked, and where you went to school."
            />
          }
          sectionKey="HISTORY"
          title="Your history"
        />,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Intro />,
}
`;
