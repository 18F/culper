// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The DiplomaItem component renders without errors 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div>
    <Field
      adjustFor="big-buttons"
      className=""
      comments={false}
      commentsActive={false}
      commentsAdd="comments.add"
      commentsName="Comments"
      commentsRemove="comments.remove"
      commentsRequired={false}
      commentsValue={Object {}}
      errorPrefix=""
      errors={Array []}
      filterErrors={[Function]}
      help="history.education.help.diploma"
      helpActive={false}
      optional={false}
      optionalText=""
      scrollIntoView={true}
      shrink={true}
      title="Provide type of degree(s)/diploma(s) received"
      titleSize="h4"
      validate={true}
    >
      <RadioGroup
        className="diploma option-list option-list-vertical"
        disabled={false}
        onError={[Function]}
        required={false}
      >
        <Radio
          ariaLabel=""
          checked={false}
          className="diploma-highschool"
          disabled={false}
          error={false}
          focus={false}
          label={
            <ReactMarkdown
              containerTagName="div"
              parserOptions={Object {}}
              renderers={
                Object {
                  "link": [Function],
                }
              }
              source="High School Diploma"
            />
          }
          name="diploma-highschool"
          native={false}
          onError={[Function]}
          onUpdate={[Function]}
          valid={false}
          value="High School Diploma"
          valued=""
        />
        <Radio
          ariaLabel=""
          checked={false}
          className="diploma-associate"
          disabled={false}
          error={false}
          focus={false}
          label={
            <ReactMarkdown
              containerTagName="div"
              parserOptions={Object {}}
              renderers={
                Object {
                  "link": [Function],
                }
              }
              source="Associate's"
            />
          }
          name="diploma-associate"
          native={false}
          onError={[Function]}
          onUpdate={[Function]}
          valid={false}
          value="Associate"
          valued=""
        />
        <Radio
          ariaLabel=""
          checked={false}
          className="diploma-bachelor"
          disabled={false}
          error={false}
          focus={false}
          label={
            <ReactMarkdown
              containerTagName="div"
              parserOptions={Object {}}
              renderers={
                Object {
                  "link": [Function],
                }
              }
              source="Bachelor's"
            />
          }
          name="diploma-bachelor"
          native={false}
          onError={[Function]}
          onUpdate={[Function]}
          valid={false}
          value="Bachelor"
          valued=""
        />
        <Radio
          ariaLabel=""
          checked={false}
          className="diploma-master"
          disabled={false}
          error={false}
          focus={false}
          label={
            <ReactMarkdown
              containerTagName="div"
              parserOptions={Object {}}
              renderers={
                Object {
                  "link": [Function],
                }
              }
              source="Master's"
            />
          }
          name="diploma-master"
          native={false}
          onError={[Function]}
          onUpdate={[Function]}
          valid={false}
          value="Master"
          valued=""
        />
        <Radio
          ariaLabel=""
          checked={false}
          className="diploma-doctorate"
          disabled={false}
          error={false}
          focus={false}
          label={
            <ReactMarkdown
              containerTagName="div"
              parserOptions={Object {}}
              renderers={
                Object {
                  "link": [Function],
                }
              }
              source="Doctorate"
            />
          }
          name="diploma-doctorate"
          native={false}
          onError={[Function]}
          onUpdate={[Function]}
          valid={false}
          value="Doctorate"
          valued=""
        />
        <Radio
          ariaLabel=""
          checked={false}
          className="diploma-professional"
          disabled={false}
          error={false}
          focus={false}
          label={
            <ReactMarkdown
              containerTagName="div"
              parserOptions={Object {}}
              renderers={
                Object {
                  "link": [Function],
                }
              }
              source="Professional Degree (eg. MD, DVM, JD)"
            />
          }
          name="diploma-professional"
          native={false}
          onError={[Function]}
          onUpdate={[Function]}
          valid={false}
          value="Professional"
          valued=""
        />
        <Radio
          ariaLabel=""
          checked={false}
          className="diploma-other"
          disabled={false}
          error={false}
          focus={false}
          label={
            <ReactMarkdown
              containerTagName="div"
              parserOptions={Object {}}
              renderers={
                Object {
                  "link": [Function],
                }
              }
              source="Other"
            />
          }
          name="diploma-other"
          native={false}
          onError={[Function]}
          onUpdate={[Function]}
          valid={false}
          value="Other"
          valued=""
        />
      </RadioGroup>
      <Show
        when={false}
      >
        <Field
          adjustFor="text"
          className=""
          comments={false}
          commentsActive={false}
          commentsAdd="comments.add"
          commentsName="Comments"
          commentsRemove="comments.remove"
          commentsRequired={false}
          commentsValue={Object {}}
          errorPrefix=""
          errors={Array []}
          filterErrors={[Function]}
          help=""
          helpActive={false}
          optional={false}
          optionalText=""
          scrollIntoView={true}
          shrink={false}
          title="Other"
          titleSize="label"
          validate={true}
        >
          <Text
            className="other"
            maxlength="100"
            name="DiplomaOther"
            onError={[Function]}
            onUpdate={[Function]}
            prefilter={[Function]}
            prefix=""
            required={false}
            status={true}
            value=""
          />
        </Field>
      </Show>
    </Field>
    <Field
      adjustFor="label"
      className=""
      comments={false}
      commentsActive={false}
      commentsAdd="comments.add"
      commentsName="Comments"
      commentsRemove="comments.remove"
      commentsRequired={false}
      commentsValue={Object {}}
      errorPrefix=""
      errors={Array []}
      filterErrors={[Function]}
      help="history.education.help.date"
      helpActive={false}
      optional={false}
      optionalText=""
      scrollIntoView={true}
      shrink={true}
      title="Date awarded"
      titleSize="h4"
      validate={true}
    >
      <Connect(DateControl)
        className="date-awarded"
        hideDay={true}
        minDateEqualTo={true}
        name="Date"
        onError={[Function]}
        onUpdate={[Function]}
      />
    </Field>
  </div>,
  "nodes": Array [
    <div>
      <Field
        adjustFor="big-buttons"
        className=""
        comments={false}
        commentsActive={false}
        commentsAdd="comments.add"
        commentsName="Comments"
        commentsRemove="comments.remove"
        commentsRequired={false}
        commentsValue={Object {}}
        errorPrefix=""
        errors={Array []}
        filterErrors={[Function]}
        help="history.education.help.diploma"
        helpActive={false}
        optional={false}
        optionalText=""
        scrollIntoView={true}
        shrink={true}
        title="Provide type of degree(s)/diploma(s) received"
        titleSize="h4"
        validate={true}
      >
        <RadioGroup
          className="diploma option-list option-list-vertical"
          disabled={false}
          onError={[Function]}
          required={false}
        >
          <Radio
            ariaLabel=""
            checked={false}
            className="diploma-highschool"
            disabled={false}
            error={false}
            focus={false}
            label={
              <ReactMarkdown
                containerTagName="div"
                parserOptions={Object {}}
                renderers={
                  Object {
                    "link": [Function],
                  }
                }
                source="High School Diploma"
              />
            }
            name="diploma-highschool"
            native={false}
            onError={[Function]}
            onUpdate={[Function]}
            valid={false}
            value="High School Diploma"
            valued=""
          />
          <Radio
            ariaLabel=""
            checked={false}
            className="diploma-associate"
            disabled={false}
            error={false}
            focus={false}
            label={
              <ReactMarkdown
                containerTagName="div"
                parserOptions={Object {}}
                renderers={
                  Object {
                    "link": [Function],
                  }
                }
                source="Associate's"
              />
            }
            name="diploma-associate"
            native={false}
            onError={[Function]}
            onUpdate={[Function]}
            valid={false}
            value="Associate"
            valued=""
          />
          <Radio
            ariaLabel=""
            checked={false}
            className="diploma-bachelor"
            disabled={false}
            error={false}
            focus={false}
            label={
              <ReactMarkdown
                containerTagName="div"
                parserOptions={Object {}}
                renderers={
                  Object {
                    "link": [Function],
                  }
                }
                source="Bachelor's"
              />
            }
            name="diploma-bachelor"
            native={false}
            onError={[Function]}
            onUpdate={[Function]}
            valid={false}
            value="Bachelor"
            valued=""
          />
          <Radio
            ariaLabel=""
            checked={false}
            className="diploma-master"
            disabled={false}
            error={false}
            focus={false}
            label={
              <ReactMarkdown
                containerTagName="div"
                parserOptions={Object {}}
                renderers={
                  Object {
                    "link": [Function],
                  }
                }
                source="Master's"
              />
            }
            name="diploma-master"
            native={false}
            onError={[Function]}
            onUpdate={[Function]}
            valid={false}
            value="Master"
            valued=""
          />
          <Radio
            ariaLabel=""
            checked={false}
            className="diploma-doctorate"
            disabled={false}
            error={false}
            focus={false}
            label={
              <ReactMarkdown
                containerTagName="div"
                parserOptions={Object {}}
                renderers={
                  Object {
                    "link": [Function],
                  }
                }
                source="Doctorate"
              />
            }
            name="diploma-doctorate"
            native={false}
            onError={[Function]}
            onUpdate={[Function]}
            valid={false}
            value="Doctorate"
            valued=""
          />
          <Radio
            ariaLabel=""
            checked={false}
            className="diploma-professional"
            disabled={false}
            error={false}
            focus={false}
            label={
              <ReactMarkdown
                containerTagName="div"
                parserOptions={Object {}}
                renderers={
                  Object {
                    "link": [Function],
                  }
                }
                source="Professional Degree (eg. MD, DVM, JD)"
              />
            }
            name="diploma-professional"
            native={false}
            onError={[Function]}
            onUpdate={[Function]}
            valid={false}
            value="Professional"
            valued=""
          />
          <Radio
            ariaLabel=""
            checked={false}
            className="diploma-other"
            disabled={false}
            error={false}
            focus={false}
            label={
              <ReactMarkdown
                containerTagName="div"
                parserOptions={Object {}}
                renderers={
                  Object {
                    "link": [Function],
                  }
                }
                source="Other"
              />
            }
            name="diploma-other"
            native={false}
            onError={[Function]}
            onUpdate={[Function]}
            valid={false}
            value="Other"
            valued=""
          />
        </RadioGroup>
        <Show
          when={false}
        >
          <Field
            adjustFor="text"
            className=""
            comments={false}
            commentsActive={false}
            commentsAdd="comments.add"
            commentsName="Comments"
            commentsRemove="comments.remove"
            commentsRequired={false}
            commentsValue={Object {}}
            errorPrefix=""
            errors={Array []}
            filterErrors={[Function]}
            help=""
            helpActive={false}
            optional={false}
            optionalText=""
            scrollIntoView={true}
            shrink={false}
            title="Other"
            titleSize="label"
            validate={true}
          >
            <Text
              className="other"
              maxlength="100"
              name="DiplomaOther"
              onError={[Function]}
              onUpdate={[Function]}
              prefilter={[Function]}
              prefix=""
              required={false}
              status={true}
              value=""
            />
          </Field>
        </Show>
      </Field>
      <Field
        adjustFor="label"
        className=""
        comments={false}
        commentsActive={false}
        commentsAdd="comments.add"
        commentsName="Comments"
        commentsRemove="comments.remove"
        commentsRequired={false}
        commentsValue={Object {}}
        errorPrefix=""
        errors={Array []}
        filterErrors={[Function]}
        help="history.education.help.date"
        helpActive={false}
        optional={false}
        optionalText=""
        scrollIntoView={true}
        shrink={true}
        title="Date awarded"
        titleSize="h4"
        validate={true}
      >
        <Connect(DateControl)
          className="date-awarded"
          hideDay={true}
          minDateEqualTo={true}
          name="Date"
          onError={[Function]}
          onUpdate={[Function]}
        />
      </Field>
    </div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <DiplomaItem
        Date={Object {}}
        Diploma={Object {}}
        DiplomaOther={Object {}}
        onError={[Function]}
        onUpdate={[Function]}
      />,
      "_debugID": 296,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": DiplomaItem {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "handleBlur": [Function],
        "handleChange": [Function],
        "handleFocus": [Function],
        "handleKeyDown": [Function],
        "handleValidation": [Function],
        "props": Object {
          "Date": Object {},
          "Diploma": Object {},
          "DiplomaOther": Object {},
          "onError": [Function],
          "onUpdate": [Function],
        },
        "refs": Object {},
        "state": null,
        "update": [Function],
        "updateDate": [Function],
        "updateDiploma": [Function],
        "updateDiplomaOther": [Function],
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div>
          <Field
            adjustFor="big-buttons"
            className=""
            comments={false}
            commentsActive={false}
            commentsAdd="comments.add"
            commentsName="Comments"
            commentsRemove="comments.remove"
            commentsRequired={false}
            commentsValue={Object {}}
            errorPrefix=""
            errors={Array []}
            filterErrors={[Function]}
            help="history.education.help.diploma"
            helpActive={false}
            optional={false}
            optionalText=""
            scrollIntoView={true}
            shrink={true}
            title="Provide type of degree(s)/diploma(s) received"
            titleSize="h4"
            validate={true}
          >
            <RadioGroup
              className="diploma option-list option-list-vertical"
              disabled={false}
              onError={[Function]}
              required={false}
            >
              <Radio
                ariaLabel=""
                checked={false}
                className="diploma-highschool"
                disabled={false}
                error={false}
                focus={false}
                label={
                  <ReactMarkdown
                    containerTagName="div"
                    parserOptions={Object {}}
                    renderers={
                      Object {
                        "link": [Function],
                      }
                    }
                    source="High School Diploma"
                  />
                }
                name="diploma-highschool"
                native={false}
                onError={[Function]}
                onUpdate={[Function]}
                valid={false}
                value="High School Diploma"
                valued=""
              />
              <Radio
                ariaLabel=""
                checked={false}
                className="diploma-associate"
                disabled={false}
                error={false}
                focus={false}
                label={
                  <ReactMarkdown
                    containerTagName="div"
                    parserOptions={Object {}}
                    renderers={
                      Object {
                        "link": [Function],
                      }
                    }
                    source="Associate's"
                  />
                }
                name="diploma-associate"
                native={false}
                onError={[Function]}
                onUpdate={[Function]}
                valid={false}
                value="Associate"
                valued=""
              />
              <Radio
                ariaLabel=""
                checked={false}
                className="diploma-bachelor"
                disabled={false}
                error={false}
                focus={false}
                label={
                  <ReactMarkdown
                    containerTagName="div"
                    parserOptions={Object {}}
                    renderers={
                      Object {
                        "link": [Function],
                      }
                    }
                    source="Bachelor's"
                  />
                }
                name="diploma-bachelor"
                native={false}
                onError={[Function]}
                onUpdate={[Function]}
                valid={false}
                value="Bachelor"
                valued=""
              />
              <Radio
                ariaLabel=""
                checked={false}
                className="diploma-master"
                disabled={false}
                error={false}
                focus={false}
                label={
                  <ReactMarkdown
                    containerTagName="div"
                    parserOptions={Object {}}
                    renderers={
                      Object {
                        "link": [Function],
                      }
                    }
                    source="Master's"
                  />
                }
                name="diploma-master"
                native={false}
                onError={[Function]}
                onUpdate={[Function]}
                valid={false}
                value="Master"
                valued=""
              />
              <Radio
                ariaLabel=""
                checked={false}
                className="diploma-doctorate"
                disabled={false}
                error={false}
                focus={false}
                label={
                  <ReactMarkdown
                    containerTagName="div"
                    parserOptions={Object {}}
                    renderers={
                      Object {
                        "link": [Function],
                      }
                    }
                    source="Doctorate"
                  />
                }
                name="diploma-doctorate"
                native={false}
                onError={[Function]}
                onUpdate={[Function]}
                valid={false}
                value="Doctorate"
                valued=""
              />
              <Radio
                ariaLabel=""
                checked={false}
                className="diploma-professional"
                disabled={false}
                error={false}
                focus={false}
                label={
                  <ReactMarkdown
                    containerTagName="div"
                    parserOptions={Object {}}
                    renderers={
                      Object {
                        "link": [Function],
                      }
                    }
                    source="Professional Degree (eg. MD, DVM, JD)"
                  />
                }
                name="diploma-professional"
                native={false}
                onError={[Function]}
                onUpdate={[Function]}
                valid={false}
                value="Professional"
                valued=""
              />
              <Radio
                ariaLabel=""
                checked={false}
                className="diploma-other"
                disabled={false}
                error={false}
                focus={false}
                label={
                  <ReactMarkdown
                    containerTagName="div"
                    parserOptions={Object {}}
                    renderers={
                      Object {
                        "link": [Function],
                      }
                    }
                    source="Other"
                  />
                }
                name="diploma-other"
                native={false}
                onError={[Function]}
                onUpdate={[Function]}
                valid={false}
                value="Other"
                valued=""
              />
            </RadioGroup>
            <Show
              when={false}
            >
              <Field
                adjustFor="text"
                className=""
                comments={false}
                commentsActive={false}
                commentsAdd="comments.add"
                commentsName="Comments"
                commentsRemove="comments.remove"
                commentsRequired={false}
                commentsValue={Object {}}
                errorPrefix=""
                errors={Array []}
                filterErrors={[Function]}
                help=""
                helpActive={false}
                optional={false}
                optionalText=""
                scrollIntoView={true}
                shrink={false}
                title="Other"
                titleSize="label"
                validate={true}
              >
                <Text
                  className="other"
                  maxlength="100"
                  name="DiplomaOther"
                  onError={[Function]}
                  onUpdate={[Function]}
                  prefilter={[Function]}
                  prefix=""
                  required={false}
                  status={true}
                  value=""
                />
              </Field>
            </Show>
          </Field>
          <Field
            adjustFor="label"
            className=""
            comments={false}
            commentsActive={false}
            commentsAdd="comments.add"
            commentsName="Comments"
            commentsRemove="comments.remove"
            commentsRequired={false}
            commentsValue={Object {}}
            errorPrefix=""
            errors={Array []}
            filterErrors={[Function]}
            help="history.education.help.date"
            helpActive={false}
            optional={false}
            optionalText=""
            scrollIntoView={true}
            shrink={true}
            title="Date awarded"
            titleSize="h4"
            validate={true}
          >
            <Connect(DateControl)
              className="date-awarded"
              hideDay={true}
              minDateEqualTo={true}
              name="Date"
              onError={[Function]}
              onUpdate={[Function]}
            />
          </Field>
        </div>,
        "_debugID": 297,
        "_renderedOutput": <div>
          <Field
            adjustFor="big-buttons"
            className=""
            comments={false}
            commentsActive={false}
            commentsAdd="comments.add"
            commentsName="Comments"
            commentsRemove="comments.remove"
            commentsRequired={false}
            commentsValue={Object {}}
            errorPrefix=""
            errors={Array []}
            filterErrors={[Function]}
            help="history.education.help.diploma"
            helpActive={false}
            optional={false}
            optionalText=""
            scrollIntoView={true}
            shrink={true}
            title="Provide type of degree(s)/diploma(s) received"
            titleSize="h4"
            validate={true}
          >
            <RadioGroup
              className="diploma option-list option-list-vertical"
              disabled={false}
              onError={[Function]}
              required={false}
            >
              <Radio
                ariaLabel=""
                checked={false}
                className="diploma-highschool"
                disabled={false}
                error={false}
                focus={false}
                label={
                  <ReactMarkdown
                    containerTagName="div"
                    parserOptions={Object {}}
                    renderers={
                      Object {
                        "link": [Function],
                      }
                    }
                    source="High School Diploma"
                  />
                }
                name="diploma-highschool"
                native={false}
                onError={[Function]}
                onUpdate={[Function]}
                valid={false}
                value="High School Diploma"
                valued=""
              />
              <Radio
                ariaLabel=""
                checked={false}
                className="diploma-associate"
                disabled={false}
                error={false}
                focus={false}
                label={
                  <ReactMarkdown
                    containerTagName="div"
                    parserOptions={Object {}}
                    renderers={
                      Object {
                        "link": [Function],
                      }
                    }
                    source="Associate's"
                  />
                }
                name="diploma-associate"
                native={false}
                onError={[Function]}
                onUpdate={[Function]}
                valid={false}
                value="Associate"
                valued=""
              />
              <Radio
                ariaLabel=""
                checked={false}
                className="diploma-bachelor"
                disabled={false}
                error={false}
                focus={false}
                label={
                  <ReactMarkdown
                    containerTagName="div"
                    parserOptions={Object {}}
                    renderers={
                      Object {
                        "link": [Function],
                      }
                    }
                    source="Bachelor's"
                  />
                }
                name="diploma-bachelor"
                native={false}
                onError={[Function]}
                onUpdate={[Function]}
                valid={false}
                value="Bachelor"
                valued=""
              />
              <Radio
                ariaLabel=""
                checked={false}
                className="diploma-master"
                disabled={false}
                error={false}
                focus={false}
                label={
                  <ReactMarkdown
                    containerTagName="div"
                    parserOptions={Object {}}
                    renderers={
                      Object {
                        "link": [Function],
                      }
                    }
                    source="Master's"
                  />
                }
                name="diploma-master"
                native={false}
                onError={[Function]}
                onUpdate={[Function]}
                valid={false}
                value="Master"
                valued=""
              />
              <Radio
                ariaLabel=""
                checked={false}
                className="diploma-doctorate"
                disabled={false}
                error={false}
                focus={false}
                label={
                  <ReactMarkdown
                    containerTagName="div"
                    parserOptions={Object {}}
                    renderers={
                      Object {
                        "link": [Function],
                      }
                    }
                    source="Doctorate"
                  />
                }
                name="diploma-doctorate"
                native={false}
                onError={[Function]}
                onUpdate={[Function]}
                valid={false}
                value="Doctorate"
                valued=""
              />
              <Radio
                ariaLabel=""
                checked={false}
                className="diploma-professional"
                disabled={false}
                error={false}
                focus={false}
                label={
                  <ReactMarkdown
                    containerTagName="div"
                    parserOptions={Object {}}
                    renderers={
                      Object {
                        "link": [Function],
                      }
                    }
                    source="Professional Degree (eg. MD, DVM, JD)"
                  />
                }
                name="diploma-professional"
                native={false}
                onError={[Function]}
                onUpdate={[Function]}
                valid={false}
                value="Professional"
                valued=""
              />
              <Radio
                ariaLabel=""
                checked={false}
                className="diploma-other"
                disabled={false}
                error={false}
                focus={false}
                label={
                  <ReactMarkdown
                    containerTagName="div"
                    parserOptions={Object {}}
                    renderers={
                      Object {
                        "link": [Function],
                      }
                    }
                    source="Other"
                  />
                }
                name="diploma-other"
                native={false}
                onError={[Function]}
                onUpdate={[Function]}
                valid={false}
                value="Other"
                valued=""
              />
            </RadioGroup>
            <Show
              when={false}
            >
              <Field
                adjustFor="text"
                className=""
                comments={false}
                commentsActive={false}
                commentsAdd="comments.add"
                commentsName="Comments"
                commentsRemove="comments.remove"
                commentsRequired={false}
                commentsValue={Object {}}
                errorPrefix=""
                errors={Array []}
                filterErrors={[Function]}
                help=""
                helpActive={false}
                optional={false}
                optionalText=""
                scrollIntoView={true}
                shrink={false}
                title="Other"
                titleSize="label"
                validate={true}
              >
                <Text
                  className="other"
                  maxlength="100"
                  name="DiplomaOther"
                  onError={[Function]}
                  onUpdate={[Function]}
                  prefilter={[Function]}
                  prefix=""
                  required={false}
                  status={true}
                  value=""
                />
              </Field>
            </Show>
          </Field>
          <Field
            adjustFor="label"
            className=""
            comments={false}
            commentsActive={false}
            commentsAdd="comments.add"
            commentsName="Comments"
            commentsRemove="comments.remove"
            commentsRequired={false}
            commentsValue={Object {}}
            errorPrefix=""
            errors={Array []}
            filterErrors={[Function]}
            help="history.education.help.date"
            helpActive={false}
            optional={false}
            optionalText=""
            scrollIntoView={true}
            shrink={true}
            title="Date awarded"
            titleSize="h4"
            validate={true}
          >
            <Connect(DateControl)
              className="date-awarded"
              hideDay={true}
              minDateEqualTo={true}
              name="Date"
              onError={[Function]}
              onUpdate={[Function]}
            />
          </Field>
        </div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <DiplomaItem
    Date={Object {}}
    Diploma={Object {}}
    DiplomaOther={Object {}}
    onError={[Function]}
    onUpdate={[Function]}
  />,
}
`;
