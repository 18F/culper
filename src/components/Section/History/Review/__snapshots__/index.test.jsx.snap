// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`History Review renders without errors 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div>
    <span>
      <ResidenceSummaryProgress
        years={10}
      />
      <EmploymentSummaryProgress
        years={10}
      />
      <Show
        when={false}
      >
        <EducationSummaryProgress
          Birthdate={null}
          Education={
            Object {
              "HasAttended": Object {},
              "HasDegree10": Object {},
            }
          }
          years={10}
        />
      </Show>
    </span>
    <hr
      className="section-divider"
    />
    <h1
      className="section-header"
    >
      Where you have lived
    </h1>
    <Connect(ConnectedHistorySection)
      overrideInitial={true}
      realtime={true}
      required={true}
      scrollIntoView={false}
    />
    <hr
      className="section-divider"
    />
    <h1
      className="section-header"
    >
      Employment activities
    </h1>
    <Connect(ConnectedHistorySection)
      overrideInitial={true}
      realtime={true}
      required={true}
      scrollIntoView={false}
    />
    <hr
      className="section-divider"
    />
    <h1
      className="section-header"
    >
      Where you went to school
    </h1>
    <Connect(ConnectedHistorySection)
      inReview={true}
    />
  </div>,
  "nodes": Array [
    <div>
      <span>
        <ResidenceSummaryProgress
          years={10}
        />
        <EmploymentSummaryProgress
          years={10}
        />
        <Show
          when={false}
        >
          <EducationSummaryProgress
            Birthdate={null}
            Education={
              Object {
                "HasAttended": Object {},
                "HasDegree10": Object {},
              }
            }
            years={10}
          />
        </Show>
      </span>
      <hr
        className="section-divider"
      />
      <h1
        className="section-header"
      >
        Where you have lived
      </h1>
      <Connect(ConnectedHistorySection)
        overrideInitial={true}
        realtime={true}
        required={true}
        scrollIntoView={false}
      />
      <hr
        className="section-divider"
      />
      <h1
        className="section-header"
      >
        Employment activities
      </h1>
      <Connect(ConnectedHistorySection)
        overrideInitial={true}
        realtime={true}
        required={true}
        scrollIntoView={false}
      />
      <hr
        className="section-divider"
      />
      <h1
        className="section-header"
      >
        Where you went to school
      </h1>
      <Connect(ConnectedHistorySection)
        inReview={true}
      />
    </div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <Review
        Education={
          Object {
            "HasAttended": Object {},
            "HasDegree10": Object {},
          }
        }
      />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "Education": Object {
            "HasAttended": Object {},
            "HasDegree10": Object {},
          },
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div>
          <span>
            <ResidenceSummaryProgress
              years={10}
            />
            <EmploymentSummaryProgress
              years={10}
            />
            <Show
              when={false}
            >
              <EducationSummaryProgress
                Birthdate={null}
                Education={
                  Object {
                    "HasAttended": Object {},
                    "HasDegree10": Object {},
                  }
                }
                years={10}
              />
            </Show>
          </span>
          <hr
            className="section-divider"
          />
          <h1
            className="section-header"
          >
            Where you have lived
          </h1>
          <Connect(ConnectedHistorySection)
            overrideInitial={true}
            realtime={true}
            required={true}
            scrollIntoView={false}
          />
          <hr
            className="section-divider"
          />
          <h1
            className="section-header"
          >
            Employment activities
          </h1>
          <Connect(ConnectedHistorySection)
            overrideInitial={true}
            realtime={true}
            required={true}
            scrollIntoView={false}
          />
          <hr
            className="section-divider"
          />
          <h1
            className="section-header"
          >
            Where you went to school
          </h1>
          <Connect(ConnectedHistorySection)
            inReview={true}
          />
        </div>,
        "_debugID": 2,
        "_renderedOutput": <div>
          <span>
            <ResidenceSummaryProgress
              years={10}
            />
            <EmploymentSummaryProgress
              years={10}
            />
            <Show
              when={false}
            >
              <EducationSummaryProgress
                Birthdate={null}
                Education={
                  Object {
                    "HasAttended": Object {},
                    "HasDegree10": Object {},
                  }
                }
                years={10}
              />
            </Show>
          </span>
          <hr
            className="section-divider"
          />
          <h1
            className="section-header"
          >
            Where you have lived
          </h1>
          <Connect(ConnectedHistorySection)
            overrideInitial={true}
            realtime={true}
            required={true}
            scrollIntoView={false}
          />
          <hr
            className="section-divider"
          />
          <h1
            className="section-header"
          >
            Employment activities
          </h1>
          <Connect(ConnectedHistorySection)
            overrideInitial={true}
            realtime={true}
            required={true}
            scrollIntoView={false}
          />
          <hr
            className="section-divider"
          />
          <h1
            className="section-header"
          >
            Where you went to school
          </h1>
          <Connect(ConnectedHistorySection)
            inReview={true}
          />
        </div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Review
    Education={
      Object {
        "HasAttended": Object {},
        "HasDegree10": Object {},
      }
    }
  />,
}
`;
